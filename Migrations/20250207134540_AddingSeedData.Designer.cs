// <auto-generated />
using System;
using AssetTrackingEntityFrameWork;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetTrackingEntityFrameWork.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250207134540_AddingSeedData")]
    partial class AddingSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetTrackingEntityFrameWork.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("EndOfLifeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Assets");

                    b.HasDiscriminator<string>("AssetType").HasValue("Asset");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AssetTrackingEntityFrameWork.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "USD",
                            ExchangeRate = 1.0m,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 2,
                            Currency = "GBP",
                            ExchangeRate = 0.75m,
                            Name = "London"
                        },
                        new
                        {
                            Id = 3,
                            Currency = "JPY",
                            ExchangeRate = 110.0m,
                            Name = "Tokyo"
                        });
                });

            modelBuilder.Entity("AssetTrackingEntityFrameWork.Laptop", b =>
                {
                    b.HasBaseType("AssetTrackingEntityFrameWork.Asset");

                    b.HasDiscriminator().HasValue("Laptop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndOfLifeDate = new DateTime(2027, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4521),
                            ModelName = "Air",
                            Name = "MacBook",
                            OfficeId = 1,
                            PurchaseDate = new DateTime(2024, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4480),
                            PurchasePrice = 2000m
                        },
                        new
                        {
                            Id = 2,
                            EndOfLifeDate = new DateTime(2027, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4525),
                            ModelName = "S33",
                            Name = "Lenovo",
                            OfficeId = 2,
                            PurchaseDate = new DateTime(2024, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4524),
                            PurchasePrice = 2000m
                        },
                        new
                        {
                            Id = 3,
                            EndOfLifeDate = new DateTime(2027, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4530),
                            ModelName = "Rog 24",
                            Name = "Asus",
                            OfficeId = 3,
                            PurchaseDate = new DateTime(2024, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4528),
                            PurchasePrice = 2000m
                        });
                });

            modelBuilder.Entity("AssetTrackingEntityFrameWork.Mobile", b =>
                {
                    b.HasBaseType("AssetTrackingEntityFrameWork.Asset");

                    b.HasDiscriminator().HasValue("Mobile");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            EndOfLifeDate = new DateTime(2027, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4554),
                            ModelName = "15",
                            Name = "iPhone",
                            OfficeId = 1,
                            PurchaseDate = new DateTime(2024, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4552),
                            PurchasePrice = 1200m
                        },
                        new
                        {
                            Id = 5,
                            EndOfLifeDate = new DateTime(2027, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4558),
                            ModelName = "Galaxy 12",
                            Name = "Samsung",
                            OfficeId = 2,
                            PurchaseDate = new DateTime(2024, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4556),
                            PurchasePrice = 1200m
                        },
                        new
                        {
                            Id = 6,
                            EndOfLifeDate = new DateTime(2027, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4562),
                            ModelName = "3310",
                            Name = "Nokia",
                            OfficeId = 3,
                            PurchaseDate = new DateTime(2024, 2, 7, 14, 45, 40, 499, DateTimeKind.Local).AddTicks(4560),
                            PurchasePrice = 1200m
                        });
                });

            modelBuilder.Entity("AssetTrackingEntityFrameWork.Asset", b =>
                {
                    b.HasOne("AssetTrackingEntityFrameWork.Office", "Office")
                        .WithMany("Assets")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("AssetTrackingEntityFrameWork.Office", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
